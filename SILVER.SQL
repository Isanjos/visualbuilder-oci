INSERT INTO silver_ga_teste SELECT * FROM (
    WITH cte_events_key AS (
        SELECT
        EVENT_DATE,
        EVENT_TIMESTAMP,
        EVENT_NAME,
        EVENT_PARAMS,
        EVENT_PREVIOUS_TIMESTAMP,
        EVENT_VALUE_IN_USD,
        EVENT_BUNDLE_SEQUENCE_ID,
        EVENT_SERVER_TIMESTAMP_OFFSET,
        USER_ID,
        USER_PSEUDO_ID,
        PRIVACY_INFO,
        USER_PROPERTIES,
        USER_FIRST_TOUCH_TIMESTAMP,
        USER_LTV,
        DEVICE,
        GEO,
        APP_INFO,
        TRAFFIC_SOURCE,
        STREAM_ID,
        PLATFORM,
        EVENT_DIMENSIONS,
        ECOMMERCE,
        ITEMS,
        COLLECTED_TRAFFIC_SOURCE,
        IS_ACTIVE_USER,
        BATCH_EVENT_INDEX,
        BATCH_PAGE_ID,
        BATCH_ORDERING_ID,
        SESSION_TRAFFIC_SOURCE_LAST_CLICK,
        PUBLISHER,

        -- Criação da chave de junção
        '1_' || COALESCE(USER_PSEUDO_ID, 'user_pseudo_id') ||
        '_2_' || COALESCE(TO_CHAR(EVENT_TIMESTAMP), 'event_timestamp') ||
        '_3_' || COALESCE(EVENT_NAME, 'event_name') ||
        '_4_' || TO_CHAR(ROW_NUMBER() OVER (
                        PARTITION BY USER_PSEUDO_ID, EVENT_TIMESTAMP, EVENT_NAME
                        ORDER BY NULL)) AS JOIN_KEY

    FROM PORTO.GA_ORIGIN_SMALL
    ),
    cte_base_ga4 AS (
    SELECT
        TO_DATE(EVENT_DATE, 'YYYYMMDD') AS event_date,
        EVENT_TIMESTAMP,
        EVENT_NAME,
        EVENT_PREVIOUS_TIMESTAMP,
        EVENT_VALUE_IN_USD,
        EVENT_BUNDLE_SEQUENCE_ID,
        EVENT_SERVER_TIMESTAMP_OFFSET,
        USER_ID,
        USER_PSEUDO_ID,
        JSON_VALUE(PRIVACY_INFO, '$.analytics_storage') AS privacy_info_analytics_storage,
        JSON_VALUE(PRIVACY_INFO, '$.ads_storage') AS privacy_info_ads_storage,
        JSON_VALUE(PRIVACY_INFO, '$.uses_transient_token') AS privacy_info_uses_transient_token,
        USER_FIRST_TOUCH_TIMESTAMP,
        JSON_VALUE(USER_LTV, '$.revenue') AS user_ltv_revenue,
        JSON_VALUE(USER_LTV, '$.currency') AS user_ltv_currency,
        JSON_VALUE(DEVICE, '$.category') AS device_category,
        JSON_VALUE(DEVICE, '$.mobile_brand_name') AS device_mobile_brand_name,
        JSON_VALUE(DEVICE, '$.mobile_model_name') AS device_mobile_model_name,
        JSON_VALUE(DEVICE, '$.mobile_marketing_name') AS device_mobile_marketing_name,
        JSON_VALUE(DEVICE, '$.mobile_os_hardware_model') AS device_mobile_os_hardware_model,
        JSON_VALUE(DEVICE, '$.operating_system') AS device_operating_system,
        JSON_VALUE(DEVICE, '$.operating_system_version') AS device_operating_system_version,
        JSON_VALUE(DEVICE, '$.vendor_id') AS device_vendor_id,
        JSON_VALUE(DEVICE, '$.advertising_id') AS device_advertising_id,
        JSON_VALUE(DEVICE, '$.language') AS device_language,
        JSON_VALUE(DEVICE, '$.is_limited_ad_tracking') AS device_is_limited_ad_tracking,
        JSON_VALUE(DEVICE, '$.time_zone_offset_seconds') AS device_time_zone_offset_seconds,
        JSON_VALUE(DEVICE, '$.browser') AS device_browser,
        JSON_VALUE(DEVICE, '$.browser_version') AS device_browser_version,
        JSON_VALUE(DEVICE, '$.web_info.browser') AS device_web_info_browser,
        JSON_VALUE(DEVICE, '$.web_info.browser_version') AS device_web_info_browser_version,
        JSON_VALUE(DEVICE, '$.web_info.hostname') AS device_web_info_hostname,
        JSON_VALUE(GEO, '$.city') AS geo_city,
        JSON_VALUE(GEO, '$.country') AS geo_country,
        JSON_VALUE(GEO, '$.continent') AS geo_continent,
        JSON_VALUE(GEO, '$.region') AS geo_region,
        JSON_VALUE(GEO, '$.sub_continent') AS geo_sub_continent,
        JSON_VALUE(GEO, '$.metro') AS geo_metro,
        JSON_VALUE(APP_INFO, '$.id') AS app_info_id,
        JSON_VALUE(APP_INFO, '$.version') AS app_info_version,
        JSON_VALUE(APP_INFO, '$.install_store') AS app_info_install_store,
        JSON_VALUE(APP_INFO, '$.firebase_app_id') AS app_info_firebase_app_id,
        JSON_VALUE(APP_INFO, '$.install_source') AS app_info_install_source,
        JSON_VALUE(TRAFFIC_SOURCE, '$.name') AS traffic_source_name,
        JSON_VALUE(TRAFFIC_SOURCE, '$.medium') AS traffic_source_medium,
        JSON_VALUE(TRAFFIC_SOURCE, '$.source') AS traffic_source_source,
        STREAM_ID,
        PLATFORM,
        JSON_VALUE(EVENT_DIMENSIONS, '$.hostname') AS event_dimensions_hostname,
        JSON_VALUE(ECOMMERCE, '$.total_item_quantity') AS ecommerce_total_item_quantity,
        JSON_VALUE(ECOMMERCE, '$.purchase_revenue_in_usd') AS ecommerce_purchase_revenue_in_usd,
        JSON_VALUE(ECOMMERCE, '$.purchase_revenue') AS ecommerce_purchase_revenue,
        JSON_VALUE(ECOMMERCE, '$.refund_value_in_usd') AS ecommerce_refund_value_in_usd,
        JSON_VALUE(ECOMMERCE, '$.refund_value') AS ecommerce_refund_value,
        JSON_VALUE(ECOMMERCE, '$.shipping_value_in_usd') AS ecommerce_shipping_value_in_usd,
        JSON_VALUE(ECOMMERCE, '$.shipping_value') AS ecommerce_shipping_value,
        JSON_VALUE(ECOMMERCE, '$.tax_value_in_usd') AS ecommerce_tax_value_in_usd,
        JSON_VALUE(ECOMMERCE, '$.tax_value') AS ecommerce_tax_value,
        JSON_VALUE(ECOMMERCE, '$.unique_items') AS ecommerce_unique_items,
        JSON_VALUE(ECOMMERCE, '$.transaction_id') AS ecommerce_transaction_id,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_campaign_id') AS collected_traffic_source_manual_campaign_id,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_campaign_name') AS collected_traffic_source_manual_campaign_name,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_source') AS collected_traffic_source_manual_source,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_medium') AS collected_traffic_source_manual_medium,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_term') AS collected_traffic_source_manual_term,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.manual_content') AS collected_traffic_source_manual_content,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.gclid') AS collected_traffic_source_gclid,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.dclid') AS collected_traffic_source_dclid,
        JSON_VALUE(COLLECTED_TRAFFIC_SOURCE, '$.srsltid') AS collected_traffic_source_srsltid,
        IS_ACTIVE_USER,
        JOIN_KEY AS base_join_key
    FROM cte_events_key
    ), cte_items_parcial AS (
    SELECT
        ek.JOIN_KEY AS items_join_key,
        ROW_NUMBER() OVER (PARTITION BY ek.JOIN_KEY ORDER BY jt.item_id) AS dedup_id,
        jt.item_id AS items_item_id,
        jt.item_name AS items_item_name,
        jt.item_brand AS items_item_brand,
        jt.item_variant AS items_item_variant,
        jt.item_category AS items_item_category,
        jt.item_category2 AS items_item_category2,
        jt.item_category3 AS items_item_category3,
        jt.item_category4 AS items_item_category4,
        jt.item_category5 AS items_item_category5,
        jt.price_in_usd AS items_price_in_usd,
        jt.price AS items_price,
        jt.quantity AS items_quantity,
        jt.item_revenue_in_usd AS items_item_revenue_in_usd,
        jt.item_revenue AS items_item_revenue,
        jt.item_refund_in_usd AS items_item_refund_in_usd,
        jt.item_refund AS items_item_refund,
        jt.coupon AS items_coupon,
        jt.affiliation AS items_affiliation,
        jt.location_id AS items_location_id,
        jt.item_list_id AS items_item_list_id,
        jt.item_list_name AS items_item_list_name,
        jt.item_list_index AS items_item_list_index,
        jt.promotion_id AS items_promotion_id,
        jt.promotion_name AS items_promotion_name,
        jt.creative_name AS items_creative_name,
        jt.creative_slot AS items_creative_slot,
        jt.item_params AS items_item_params
    FROM cte_events_key ek,
        JSON_TABLE(
        ek.items,
        '$[*]'
        COLUMNS (
            item_id             VARCHAR2(100) PATH '$.item_id',
            item_name           VARCHAR2(200) PATH '$.item_name',
            item_brand          VARCHAR2(100) PATH '$.item_brand',
            item_variant        VARCHAR2(100) PATH '$.item_variant',
            item_category       VARCHAR2(100) PATH '$.item_category',
            item_category2      VARCHAR2(100) PATH '$.item_category2',
            item_category3      VARCHAR2(100) PATH '$.item_category3',
            item_category4      VARCHAR2(100) PATH '$.item_category4',
            item_category5      VARCHAR2(100) PATH '$.item_category5',
            price_in_usd        NUMBER        PATH '$.price_in_usd',
            price               NUMBER        PATH '$.price',
            quantity            NUMBER        PATH '$.quantity',
            item_revenue_in_usd NUMBER        PATH '$.item_revenue_in_usd',
            item_revenue        NUMBER        PATH '$.item_revenue',
            item_refund_in_usd  NUMBER        PATH '$.item_refund_in_usd',
            item_refund         NUMBER        PATH '$.item_refund',
            coupon              VARCHAR2(100) PATH '$.coupon',
            affiliation         VARCHAR2(100) PATH '$.affiliation',
            location_id         VARCHAR2(100) PATH '$.location_id',
            item_list_id        VARCHAR2(100) PATH '$.item_list_id',
            item_list_name      VARCHAR2(100) PATH '$.item_list_name',
            item_list_index     NUMBER        PATH '$.item_list_index',
            promotion_id        VARCHAR2(100) PATH '$.promotion_id',
            promotion_name      VARCHAR2(100) PATH '$.promotion_name',
            creative_name       VARCHAR2(100) PATH '$.creative_name',
            creative_slot       VARCHAR2(100) PATH '$.creative_slot',
            item_params         CLOB          PATH '$.item_params'
        )
        ) jt
    ),

    -- Explode os item_params e extrai os valores desejados
    cte_items_item_params AS (
    SELECT
        ip.items_join_key AS items_item_params_join_key,
        ip.dedup_id,
        MAX(CASE WHEN p.key = 'installments' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS items_item_params_installments,
        MAX(CASE WHEN p.key = 'installments_value' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS items_item_params_installments_value
    FROM cte_items_parcial ip
    CROSS JOIN JSON_TABLE(
        ip.items_item_params,
        '$[*]'
        COLUMNS (
        key           VARCHAR2(100)  PATH '$.key',
        string_value  VARCHAR2(4000) PATH '$.value.string_value',
        int_value     VARCHAR2(4000) PATH '$.value.int_value',
        float_value   VARCHAR2(4000) PATH '$.value.float_value',
        double_value  VARCHAR2(4000) PATH '$.value.double_value'
        )
    ) p
    GROUP BY ip.items_join_key, ip.dedup_id
    ),

    -- Junta os dois conjuntos em uma CTE final
    -- Junta os dois conjuntos em uma CTE final
    cte_items AS (
    SELECT DISTINCT
        A.items_join_key,
        A.dedup_id,
        A.items_item_id,
        A.items_item_name,
        A.items_item_brand,
        A.items_item_variant,
        A.items_item_category,
        A.items_item_category2,
        A.items_item_category3,
        A.items_item_category4,
        A.items_item_category5,
        A.items_price_in_usd,
        A.items_price,
        A.items_quantity,
        A.items_item_revenue_in_usd,
        A.items_item_revenue,
        A.items_item_refund_in_usd,
        A.items_item_refund,
        A.items_coupon,
        A.items_affiliation,
        A.items_location_id,
        A.items_item_list_id,
        A.items_item_list_name,
        A.items_item_list_index,
        A.items_promotion_id,
        A.items_promotion_name,
        A.items_creative_name,
        A.items_creative_slot,
        B.items_item_params_installments,
        B.items_item_params_installments_value
    FROM cte_items_parcial A
    LEFT JOIN cte_items_item_params B
        ON A.items_join_key = B.items_item_params_join_key
    AND A.dedup_id = B.dedup_id
    ), cte_event_params AS (

    SELECT
        ek.join_key AS event_params_join_key,
        MAX(CASE WHEN key = 'accessibility_senses' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_accessibility_senses,
        MAX(CASE WHEN key = 'active_product' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_active_product,
        MAX(CASE WHEN key = 'alert' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_alert,
        MAX(CASE WHEN key = 'alert_code' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_alert_code,
        MAX(CASE WHEN key = 'alert_event' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_alert_event,
        MAX(CASE WHEN key = 'alert_service_message' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_alert_service_message,
        MAX(CASE WHEN key = 'alert_type' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_alert_type,
        MAX(CASE WHEN key = 'app_brand' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_brand,
        MAX(CASE WHEN key = 'app_platform' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_platform,
        MAX(CASE WHEN key = 'app_section' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_section,
        MAX(CASE WHEN key = 'app_sub_section_1' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_sub_section_1,
        MAX(CASE WHEN key = 'app_sub_section_2' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_sub_section_2,
        MAX(CASE WHEN key = 'app_sub_section_3' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_sub_section_3,
        MAX(CASE WHEN key = 'app_version' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_app_version,
        MAX(CASE WHEN key = 'as_shellbox_abastecimento' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_abastecimento,
        MAX(CASE WHEN key = 'as_shellbox_ativar_gps' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_ativar_gps,
        MAX(CASE WHEN key = 'as_shellbox_ativar_localizacao' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_ativar_localizacao,
        MAX(CASE WHEN key = 'as_shellbox_cadastrar_biometria_facial' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_cadastrar_biometria_facial,
        MAX(CASE WHEN key = 'as_shellbox_codigo_abastecimento' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_codigo_abastecimento,
        MAX(CASE WHEN key = 'as_shellbox_consultar_beneficio' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_consultar_beneficio,
        MAX(CASE WHEN key = 'as_shellbox_consultar_cartao' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_consultar_cartao,
        MAX(CASE WHEN key = 'as_shellbox_consultar_disponibilidade' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_consultar_disponibilidade,
        MAX(CASE WHEN key = 'as_shellbox_lexis_nexis' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_lexis_nexis,
        MAX(CASE WHEN key = 'as_shellbox_status_abastecimento' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_status_abastecimento,
        MAX(CASE WHEN key = 'as_shellbox_validar_lexis_nexis' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_as_shellbox_validar_lexis_nexis,
        MAX(CASE WHEN key = 'bank' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_bank,
        MAX(CASE WHEN key = 'brand' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_brand,
        MAX(CASE WHEN key = 'campaign' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_campaign,
        MAX(CASE WHEN key = 'campaign_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_campaign_id,
        MAX(CASE WHEN key = 'campaign_info_source' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_campaign_info_source,
        MAX(CASE WHEN key = 'channel' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_channel,
        MAX(CASE WHEN key = 'click_timestamp' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_click_timestamp,
        MAX(CASE WHEN key = 'client_bcp' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_client_bcp,
        MAX(CASE WHEN key = 'client_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_client_id,
        MAX(CASE WHEN key = 'cobertura' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_cobertura,
        MAX(CASE WHEN key = 'content' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_content,
        MAX(CASE WHEN key = 'count_quotas' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_count_quotas,
        MAX(CASE WHEN key = 'creative_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_creative_name,
        MAX(CASE WHEN key = 'creative_slot' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_creative_slot,
        MAX(CASE WHEN key = 'currency' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_currency,
        MAX(CASE WHEN key = 'debug_event' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_debug_event,
        MAX(CASE WHEN key = 'dynamics_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_dynamics_id,
        MAX(CASE WHEN key = 'engaged_session_event' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_engaged_session_event,
        MAX(CASE WHEN key = 'engagement_time_msec' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_engagement_time_msec,
        MAX(CASE WHEN key = 'entrances' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_entrances,
        MAX(CASE WHEN key = 'erro_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_erro_name,
        MAX(CASE WHEN key = 'erro_service' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_erro_service,
        MAX(CASE WHEN key = 'error' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error,
        MAX(CASE WHEN key = 'error_description' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error_description,
        MAX(CASE WHEN key = 'error_message' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error_message,
        MAX(CASE WHEN key = 'error_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error_name,
        MAX(CASE WHEN key = 'error_service' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error_service,
        MAX(CASE WHEN key = 'error_value' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_error_value,
        MAX(CASE WHEN key = 'ev_action' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ev_action,
        MAX(CASE WHEN key = 'ev_category' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ev_category,
        MAX(CASE WHEN key = 'ev_detail' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ev_detail,
        MAX(CASE WHEN key = 'ev_label' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ev_label,
        MAX(CASE WHEN key = 'ev_value' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ev_value,
        MAX(CASE WHEN key = 'event' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_event,
        MAX(CASE WHEN key = 'fatal' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_fatal,
        MAX(CASE WHEN key = 'firebase_conversion' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_conversion,
        MAX(CASE WHEN key = 'firebase_error' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_error,
        MAX(CASE WHEN key = 'firebase_event_origin' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_event_origin,
        MAX(CASE WHEN key = 'firebase_previous_class' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_previous_class,
        MAX(CASE WHEN key = 'firebase_previous_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_previous_id,
        MAX(CASE WHEN key = 'firebase_previous_screen' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_previous_screen,
        MAX(CASE WHEN key = 'firebase_screen' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_screen,
        MAX(CASE WHEN key = 'firebase_screen_class' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_screen_class,
        MAX(CASE WHEN key = 'firebase_screen_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_firebase_screen_id,
        MAX(CASE WHEN key = 'ga_session_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ga_session_id,
        MAX(CASE WHEN key = 'ga_session_number' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_ga_session_number,
        MAX(CASE WHEN key = 'gclid' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_gclid,
        MAX(CASE WHEN key = 'id_bcp' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_id_bcp,
        MAX(CASE WHEN key = 'item_list_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_item_list_name,
        MAX(CASE WHEN key = 'item_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_item_name,
        MAX(CASE WHEN key = 'lead_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_lead_id,
        MAX(CASE WHEN key = 'medium' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_medium,
        MAX(CASE WHEN key = 'method' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_method,
        MAX(CASE WHEN key = 'no_interaction' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_no_interaction,
        MAX(CASE WHEN key = 'opcoes_selecionadas' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_opcoes_selecionadas,
        MAX(CASE WHEN key = 'payment_type' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_payment_type,
        MAX(CASE WHEN key = 'porto' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_porto,
        MAX(CASE WHEN key = 'portoplus' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_portoplus,
        MAX(CASE WHEN key = 'previous_app_version' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_previous_app_version,
        MAX(CASE WHEN key = 'previous_first_open_count' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_previous_first_open_count,
        MAX(CASE WHEN key = 'previous_os_version' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_previous_os_version,
        MAX(CASE WHEN key = 'product' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product,
        MAX(CASE WHEN key = 'product_category' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_category,
        MAX(CASE WHEN key = 'product_detail' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_detail,
        MAX(CASE WHEN key = 'product_details' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_details,
        MAX(CASE WHEN key = 'product_identify' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_identify,
        MAX(CASE WHEN key = 'product_invoice' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_invoice,
        MAX(CASE WHEN key = 'product_proposal_number' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_proposal_number,
        MAX(CASE WHEN key = 'product_user_profile' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_user_profile,
        MAX(CASE WHEN key = 'product_value' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_product_value,
        MAX(CASE WHEN key = 'promotion_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_promotion_name,
        MAX(CASE WHEN key = 'question_faq' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_question_faq,
        MAX(CASE WHEN key = 'screen' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_screen,
        MAX(CASE WHEN key = 'screen_class' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_screen_class,
        MAX(CASE WHEN key = 'screen_name' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_screen_name,
        MAX(CASE WHEN key = 'search_term' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_search_term,
        MAX(CASE WHEN key = 'self_service' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_self_service,
        MAX(CASE WHEN key = 'self_service_protocol' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_self_service_protocol,
        MAX(CASE WHEN key = 'service_detail' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_service_detail,
        MAX(CASE WHEN key = 'service_protocol' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_service_protocol,
        MAX(CASE WHEN key = 'service_type' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_service_type,
        MAX(CASE WHEN key = 'session_engaged' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_session_engaged,
        MAX(CASE WHEN key = 'siebel_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_siebel_id,
        MAX(CASE WHEN key = 'source' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_source,
        MAX(CASE WHEN key = 'step' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_step,
        MAX(CASE WHEN key = 'system_app' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_system_app,
        MAX(CASE WHEN key = 'system_app_update' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_system_app_update,
        MAX(CASE WHEN key = 'term' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_term,
        MAX(CASE WHEN key = 'time' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_time,
        MAX(CASE WHEN key = 'timestamp' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_timestamp,
        MAX(CASE WHEN key = 'transaction_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_transaction_id,
        MAX(CASE WHEN key = 'update_with_analytics' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_update_with_analytics,
        MAX(CASE WHEN key = 'user_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_user_id,
        MAX(CASE WHEN key = 'value' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_value,
        MAX(CASE WHEN key = 'vertical' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_vertical,
        MAX(CASE WHEN key = 'journey' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_journey,
        MAX(CASE WHEN key = 'funnel' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_funnel,
        MAX(CASE WHEN key = 'status' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_status,
        MAX(CASE WHEN key = 'verify_id' THEN COALESCE(string_value, int_value, float_value, double_value) END) AS event_params_verify_id
    FROM cte_events_key ek
    CROSS JOIN JSON_TABLE(
        ek.event_params,
        '$[*]'
        COLUMNS (
        key           VARCHAR2(100)  PATH '$.key',
        string_value  VARCHAR2(4000) PATH '$.value.string_value',
        int_value     VARCHAR2(4000) PATH '$.value.int_value',
        float_value   VARCHAR2(4000) PATH '$.value.float_value',
        double_value  VARCHAR2(4000) PATH '$.value.double_value'
        )
    ) p
    GROUP BY ek.join_key
    ),
    cte_user_properties AS (
    SELECT
        ek.join_key AS user_properties_join_key,
        
        MAX(CASE WHEN p.key = 'user_properties' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_user_properties,
        MAX(CASE WHEN p.key = 'first_open_time' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_first_open_time,
        MAX(CASE WHEN p.key = 'ga_session_number' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_ga_session_number,
        MAX(CASE WHEN p.key = 'ga_session_id' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_ga_session_id,
        MAX(CASE WHEN p.key = 'products' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_products,
        MAX(CASE WHEN p.key = 'client_bcp' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_client_bcp,
        MAX(CASE WHEN p.key = 'last_gclid' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_last_gclid,
        MAX(CASE WHEN p.key = 'client_id' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_client_id,
        MAX(CASE WHEN p.key = '_ltv_BRL' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties__ltv_BRL,
        MAX(CASE WHEN p.key = 'user_id' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_user_id,
        MAX(CASE WHEN p.key = 'client_bcc' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_client_bcc,
        MAX(CASE WHEN p.key = 'last_advertising_id_reset' THEN COALESCE(p.string_value, p.int_value, p.float_value, p.double_value) END) AS user_properties_last_advertising_id_reset

    FROM cte_events_key ek
    CROSS JOIN JSON_TABLE(
        ek.user_properties,
        '$[*]'
        COLUMNS (
        key                 VARCHAR2(100)  PATH '$.key',
        string_value        VARCHAR2(4000) PATH '$.value.string_value',
        int_value           VARCHAR2(4000) PATH '$.value.int_value',
        float_value         VARCHAR2(4000) PATH '$.value.float_value',
        double_value        VARCHAR2(4000) PATH '$.value.double_value',
        set_timestamp_micros NUMBER PATH '$.value.set_timestamp_micros'
        )
    ) p

    GROUP BY ek.join_key
    ),
    cte_base_full AS (
        SELECT
            A.*,
            B.items_item_id,
            B.items_item_name,
            B.items_item_brand,
            B.items_item_variant,
            B.items_item_category,
            B.items_item_category2,
            B.items_item_category3,
            B.items_item_category4,
            B.items_item_category5,
            B.items_price_in_usd,
            B.items_price,
            B.items_quantity,
            B.items_item_revenue_in_usd,
            B.items_item_revenue,
            B.items_item_refund_in_usd,
            B.items_item_refund,
            B.items_coupon,
            B.items_affiliation,
            B.items_location_id,
            B.items_item_list_id,
            B.items_item_list_name,
            B.items_item_list_index,
            B.items_promotion_id,
            B.items_promotion_name,
            B.items_creative_name,
            B.items_creative_slot,
            B.items_item_params_installments,
            B.items_item_params_installments_value,
            C.*,
            D.*
        FROM cte_base_ga4 A
        LEFT JOIN cte_items B ON A.base_join_key = B.items_join_key
        LEFT JOIN cte_event_params C ON A.base_join_key = C.event_params_join_key
        LEFT JOIN cte_user_properties D ON A.base_join_key = D.user_properties_join_key
    ),
    cte_final_silver AS (
        SELECT
            f.*,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_campaign_id,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_source,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_medium,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_term,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_content,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_gclid,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_dclid,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_srsltid,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_client_id,
            CAST(NULL AS VARCHAR2(4000)) AS last_session_campaign_name
        FROM cte_base_full f
    )
    SELECT * FROM CTE_FINAL_SILVER
);
